<!-- _ProductFilterOffcanvas.cshtml -->
@model Manero.ViewModels.ProductFilterViewModel
<div class="offcanvas offcanvas-end" tabindex="-1" id="filterOffcanvas" aria-labelledby="filterOffcanvasLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="filterOffcanvasLabel">Filter</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <script>
            function updatePriceDisplay(value, displayElementId, isMinPrice) {
                var displayElement = document.getElementById(displayElementId);
                var priceValue = parseFloat(value).toFixed(2);
                displayElement.textContent = isMinPrice ? 'Min Price: ' + priceValue : 'Max Price: ' + priceValue;
            }
        </script>
        <!-- Filter form -->
        <form id="filterForm" method="get" asp-action="Index" asp-controller="Products">
            <!-- Size filter -->
            <div class="mb-3">
                <h6>Size</h6>
                @foreach (var size in Model.AvailableSizes)
                {
                    <label>
                        <input type="checkbox" name="Sizes" value="@size.Size"
                        @(Model.Sizes.Contains(size.Size) ? "checked='checked'" : "") />
                        @size.Size
                    </label>

                }
            </div>

            <!-- Color filter -->
            <div class="mb-3">
                <h6>Color</h6>
                @foreach (var color in Model.AvailableColors)
                {
                    
                    <label>
                        <!-- Assuming Code is the color value -->
                        <input type="checkbox" name="Colors" value="@color.Color"
                        @(Model.Colors.Contains(color.Color) ? "checked='checked'" : "") />
                        @color.Color
                    </label>
                }
            </div>

            <!-- Price filter -->
            <div class="mb-3">
                <h6>Price</h6>

                <label class="d-flex flex-column">
                    <span id="minPriceDisplay">@Model.MinPrice?.ToString("C")</span>
                    <input type="range" name="MinPrice" min="0" max="10000"
                           value="@Model.MinPrice" oninput="updatePriceDisplay(this.value, 'minPriceDisplay', true)" />
                </label>

                <label class="d-flex flex-column">
                    <span id="maxPriceDisplay">@Model.MaxPrice?.ToString("C")</span>
                    <input type="range" name="MaxPrice" min="1" max="10000"
                           value="@Model.MaxPrice" oninput="updatePriceDisplay(this.value, 'maxPriceDisplay', false)" />
                </label>
            </div>


            <!-- Tags filter -->
            <div class="mb-3">
                <h6>Tags</h6>
                @foreach (var tag in Model.AvailableTags)
                {
                    <label>
                        <input type="checkbox" name="Tags" value="@tag.Tag"
                        @(Model.Tags.Contains(tag.Tag) ? "checked='checked'" : "") />
                        @tag.Tag
                    </label>
                }
            </div>

            <!-- Category filter -->
            <div class="mb-3">
                <h6>Categories</h6>
                @foreach (var category in Model.AvailableCategories)
                {
                    <label>
                        <input type="checkbox" name="Categories" value="@category.Category"
                        @(Model.Categories.Contains(category.Category) ? "checked='checked'" : "") />
                        @category.Category
                    </label>
                }
            </div>



            <!-- Apply filters button -->
            <div class="d-grid gap-2">
                <button type="submit" class="btn btn-dark" id="applyFilters">APPLY FILTERS</button>
            </div>
        </form>
    </div>
</div>